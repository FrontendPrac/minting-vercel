"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/ktmf-pass",{

/***/ "./src/utilits.js":
/*!************************!*\
  !*** ./src/utilits.js ***!
  \************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"dataBgImg\": function() { return /* binding */ dataBgImg; },\n/* harmony export */   \"handleQuantityChange\": function() { return /* binding */ handleQuantityChange; },\n/* harmony export */   \"heroSlider2\": function() { return /* binding */ heroSlider2; },\n/* harmony export */   \"holdSection\": function() { return /* binding */ holdSection; },\n/* harmony export */   \"imgToSVG\": function() { return /* binding */ imgToSVG; },\n/* harmony export */   \"scrollTop\": function() { return /* binding */ scrollTop; },\n/* harmony export */   \"stickyNav\": function() { return /* binding */ stickyNav; }\n/* harmony export */ });\n/* harmony import */ var _swc_helpers_src_async_to_generator_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @swc/helpers/src/_async_to_generator.mjs */ \"./node_modules/@swc/helpers/src/_async_to_generator.mjs\");\n/* harmony import */ var _swc_helpers_src_ts_generator_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @swc/helpers/src/_ts_generator.mjs */ \"./node_modules/@swc/helpers/src/_ts_generator.mjs\");\n\n\nvar imgToSVG = function() {\n    document.querySelectorAll(\"img.fn__svg\").forEach(function(el) {\n        var imgID = el.getAttribute(\"id\");\n        var imgClass = el.getAttribute(\"class\");\n        var imgURL = el.getAttribute(\"src\");\n        fetch(imgURL).then(function(data) {\n            return data.text();\n        }).then(function(response) {\n            var parser = new DOMParser();\n            var xmlDoc = parser.parseFromString(response, \"text/html\");\n            var svg = xmlDoc.querySelector(\"svg\");\n            setTimeout(function() {\n                if (svg !== null) {\n                    if (typeof imgID !== \"undefined\") {\n                        svg.setAttribute(\"id\", imgID);\n                    }\n                    if (typeof imgClass !== \"undefined\") {\n                        svg.setAttribute(\"class\", imgClass + \" replaced-svg\");\n                    }\n                    svg.removeAttribute(\"xmlns:a\");\n                    el.parentNode && el.parentNode.replaceChild(svg, el);\n                }\n            }, 500);\n        });\n    });\n};\n// Data image\nvar dataBgImg = function() {\n    var d = document.querySelectorAll(\"[data-bg-img]\");\n    for(var i = 0; i < d.length; i++){\n        var element = d[i];\n        element.style.backgroundImage = \"url(\".concat(element.getAttribute(\"data-bg-img\"), \")\");\n    }\n};\n// Header\nvar stickyNav = function() {\n    var header = document.querySelector(\".header\");\n    window.addEventListener(\"scroll\", function() {\n        var offset = window.scrollY;\n        if (offset > 10) {\n            header.classList.add(\"active\");\n        } else {\n            header.classList.remove(\"active\");\n        }\n    });\n};\n// Hold\nvar holdSection = function() {\n    var social = document.querySelector(\"#social\");\n    var metaportal_fn_search = document.querySelector(\".metaportal_fn_search\");\n    window.addEventListener(\"scroll\", function() {\n        var offset = window.scrollY;\n        if (offset < 2000) {\n            metaportal_fn_search.classList.add(\"hold\");\n            social.classList.add(\"hold\");\n        } else {\n            social.classList.remove(\"hold\");\n            metaportal_fn_search.classList.remove(\"hold\");\n        }\n    });\n};\n// scroll to top\nvar scrollTop = function() {\n    var body = document.querySelector(\"body\");\n    window.addEventListener(\"scroll\", function() {\n        var offset = window.scrollY;\n        if (offset > 300) {\n            body.classList.add(\"totop-active\");\n        } else {\n            body.classList.remove(\"totop-active\");\n        }\n    });\n};\nvar heroSlider2 = function() {\n    var flow_calc = function(element) {\n        var w = element.clientWidth, initial_width = element.getAttribute(\"data-initial-width\"), ratio = element.getAttribute(\"data-ratio\"), padding = 20;\n        padding *= 2;\n        var width = (w - padding) / 2 > initial_width ? initial_width : (w - padding) / 2, height = width * ratio + padding, ul = element.getElementsByTagName(\"ul\")[0], children_ = ul.getElementsByTagName(\"li\");\n        ul.style.height = \"\".concat(height, \"px\");\n        for(var i = 0; i < children_.length; i++){\n            var children = children_[i], img = children.getElementsByTagName(\"img\")[0];\n            img.style.width = \"\".concat(width, \"px\");\n            img.style.height = \"\".concat(height, \"px\");\n            children.style.left = \"50%\";\n            children.style.transform = \"scale(0)\";\n        }\n        var current_left = w / 2 - width / 2, next1_left = current_left + width / 2.5, next2_left = next1_left + width / 2.5, next3_left = next2_left + width / 2.5, prev1_left = current_left - width / 2.5, prev2_left = prev1_left - width / 2.5, prev3_left = prev1_left - width / 2.5;\n        var current = ul.getElementsByClassName(\"current\")[0], next1 = ul.getElementsByClassName(\"next1\")[0], next2 = ul.getElementsByClassName(\"next2\")[0], prev1 = ul.getElementsByClassName(\"prev1\")[0], prev2 = ul.getElementsByClassName(\"prev2\")[0];\n        current.style.left = current_left + \"px\";\n        current.style.top = 0;\n        current.style.transform = \"scale(1) translateZ(0) rotate(0)\";\n        next1.style.left = next1_left + \"px\";\n        next1.style.top = \"90px\";\n        next1.style.transform = \"scale(1) translateZ(0) rotate(15deg)\";\n        next2.style.left = next2_left + \"px\";\n        next2.style.top = \"240px\";\n        next2.style.transform = \"scale(1) translateZ(0) rotate(30deg)\";\n        prev1.style.left = prev1_left + \"px\";\n        prev1.style.top = \"30px\";\n        prev1.style.transform = \"scale(1) translateZ(0) rotate(-15deg)\";\n        prev2.style.left = prev2_left + \"px\";\n        prev2.style.top = \"240px\";\n        prev2.style.transform = \"scale(1) translateZ(0) rotate(-30deg)\";\n    };\n    var floww_start_autoplay = function(element) {\n        var length = element.getElementsByTagName(\"li\").length;\n        var i = 0;\n        var interval = setInterval(function() {\n            i = i === length ? 0 : i + 1;\n            floww_change_slide(i, element);\n        }, 5000);\n        return function() {\n            return clearInterval(interval);\n        };\n    };\n    var floww_change_slide = function(index, element) {\n        var ul = element.getElementsByTagName(\"ul\")[0], children_ = ul.getElementsByTagName(\"li\"), length = children_.length;\n        index = (index + length) % length;\n        var el = children_[indexNumber(index, length)];\n        if (!el.classList.contains(\"current\")) {\n            for(var i = 0; i < children_.length; i++){\n                var children = children_[i];\n                children.classList.remove(\"current\", \"next1\", \"next2\", \"prev1\", \"prev2\", \"next3\", \"prev3\");\n            }\n            el.classList.add(\"current\");\n            var next1_index = (index + 1) % length;\n            var next2_index = (index + 2) % length;\n            var next3_index = (index + 3) % length;\n            var prev1_index = (index - 1 + length) % length;\n            var prev2_index = (index - 2 + length) % length;\n            var prev3_index = (index - 3 + length) % length;\n            children_[indexNumber(next1_index, length)].classList.add(\"next1\");\n            children_[indexNumber(next2_index, length)].classList.add(\"next2\");\n            children_[indexNumber(prev1_index, length)].classList.add(\"prev1\");\n            children_[indexNumber(prev2_index, length)].classList.add(\"prev2\");\n            if (length > 6) {\n                children_[indexNumber(next3_index, length)].classList.add(\"next3\");\n                children_[indexNumber(prev3_index, length)].classList.add(\"prev3\");\n            }\n            floww_calc_call(element);\n        }\n    };\n    var floww_calc_call = function(element) {\n        if (typeof element === \"undefined\") {\n            document.getElementByClassName(\"frenify_cards_gallery\").each(function() {\n                element = this;\n                flow_calc(element);\n            });\n        } else {\n            flow_calc(element);\n        }\n    };\n    var indexNumber = function(index, length) {\n        return index == 0 ? length - 1 : index - 1;\n    };\n    var frenify_cards_gallery = document.querySelectorAll(\".frenify_cards_gallery\");\n    frenify_cards_gallery.forEach(function(element, i) {\n        floww_change_slide(i, element);\n        floww_start_autoplay(element);\n    });\n};\n// Update total price when quantity changes\nvar handleQuantityChange = function() {\n    var _ref = (0,_swc_helpers_src_async_to_generator_mjs__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(function(value, setQuantity, setTotalPrice) {\n        var newTotalPrice;\n        return (0,_swc_helpers_src_ts_generator_mjs__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(this, function(_state) {\n            if (!window.ethereum) {\n                alert(\"메타마스크를 연결해주세요\");\n                return [\n                    2\n                ];\n            }\n            setQuantity(value);\n            newTotalPrice = value * publicPrice;\n            setTotalPrice(newTotalPrice);\n            return [\n                2\n            ];\n        });\n    });\n    return function handleQuantityChange(value, setQuantity, setTotalPrice) {\n        return _ref.apply(this, arguments);\n    };\n}();\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/utilits.js\n"));

/***/ })

});